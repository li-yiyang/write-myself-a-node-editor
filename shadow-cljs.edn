;; shadow-cljs configuration
{:source-paths ["src"]                  ; where clojurescript file stores

 :dev-http {4000 "rescources/public"}   ; run shadow-cljs watch ...
                                        ; open localhost:4000 to preview

 :dependencies                          ; package dependencies
 [
  [cider/cider-nrepl "0.30.0"]          ; for Cider in Emacs to use
  [reagent "1.2.0"]                     ; Reagent
  [re-frame "1.3.0"]                    ; re-frame
  [binaryage/devtools "1.0.7"]          ; devtools
  [instaparse "1.4.12"]                 ; instaparese for Input Parser
  [com.cognitect/transit-cljs "0.8.280"] ; transit-cljs for serializing
  [org.babashka/sci "0.7.39"]           ; clojure interpreter
  [org.mentat/emmy "0.30.0"]            ; for symbolic computation
  ]

 :builds                                ; run shadow-cljs compile ... to build
 {:main                                 ; shadow-cljs compile main
  {
   :target :node-script                 ; for electron usage
   :output-to "rescources/main.js"      ; output dir
   :main app.main.core/main             ; main function entry
   }

  :renderer                             ; shadow-cljs compile renderer
  {
   :target :browser                     ; for browser
                                        ; NOTE: The render process in Electron
                                        ; runs under the browser enviroment.  
   :output-dir "rescources/public/js"   ; output path
   :asset-path "js"
   :modules {
             :renderer                  ; compile to renderer.js
             {:init-fn app.renderer.core/start!}}}}}
